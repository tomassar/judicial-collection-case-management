// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.680
package dashboard_view

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/tomassar/judicial-collection-case-management/internal/templates/layout"
import "github.com/tomassar/judicial-collection-case-management/internal/templates/cases_view"
import "github.com/tomassar/judicial-collection-case-management/internal/domain/cases"

func Show(c []*cases.Case) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"p-10\"><h1 class=\"text-xl text-blue-700\"></h1><form hx-post=\"/cases\" hx-ext=\"json-enc\" hx-swap=\"none\" class=\"bg-white p-8 rounded shadow-md w-full max-w-md\"><h2 class=\"text-2xl font-bold mb-6\">Agregar causa</h2><div class=\"mb-4\"><label for=\"debtor_name\" class=\"block text-gray-700 font-bold mb-2\">Nombre del deudor:</label> <input type=\"text\" id=\"debtor_name\" name=\"debtor_name\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required></div><div class=\"mb-6\"><label for=\"status\" class=\"block text-gray-700 font-bold mb-2\">Estado:</label> <select id=\"status\" name=\"status\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required><optgroup label=\"Cuaderno Principal\"><option value=\"sue\">Demanda</option> <option value=\"opposes_exceptions\">Opone exepciones</option> <option value=\"transfer_exceptions\">Traslado excepciones</option> <option value=\"overdue\">Término probatorio</option> <option value=\"overdue\">Observaciones a la prueba</option> <option value=\"overdue\">Citación a oir sentencia</option> <option value=\"overdue\">Sentencia</option> <option value=\"overdue\">Recurso de apelación</option></optgroup> <optgroup label=\"Cuaderno de apremio\"><option value=\"overdue\">Mandamiento</option> <option value=\"overdue\">Embargo</option> <option value=\"overdue\">Tasación</option> <option value=\"overdue\">Bases de remate</option> <option value=\"overdue\">Remate</option> <option value=\"overdue\">Adjudicación</option> <option value=\"overdue\">Da cuenta de pago</option> <option value=\"overdue\">Giro de transferencia </option></optgroup></select></div><div class=\"flex items-center justify-between\"><button hx-post=\"/cases\" hx-swap=\"none\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\" _=\"on htmx:send\n                                put &#39;Agregando...&#39; into my innerHTML\n                            on htmx:afterRequest\n                                put &#39;Agregar&#39; into my innerHTML\n                                add .bg-green-500 to me\n                                wait 1s\n                                remove .bg-green-500 from me\">Agregar</button></div></form><div><h2 class=\"text-2xl font-bold mb-6\">Causas</h2>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = cases_view.List(c).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout.Base().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
